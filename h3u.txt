#include <iostream>
#include <vector>
#include <omp.h>

using namespace std;

int main() {
    int size;

    cout << "Enter the size of the vector: ";
    cin >> size;

    vector<int> data(size);

    cout << "Enter " << size << " integers: ";
    for (int i = 0; i < size; ++i) {
        cin >> data[i];
    }

    int min_value = data[0];
    int max_value = data[0];
    int sum = 0;

    // Parallel reduction for minimum, maximum, and sum
    #pragma omp parallel for reduction(min:min_value) reduction(max:max_value) reduction(+:sum)
    for (int i = 0; i < size; ++i) {
        if (data[i] < min_value) {
            min_value = data[i];
        }
        if (data[i] > max_value) {
            max_value = data[i];
        }
        sum += data[i];
    }

    float average = static_cast<float>(sum) / size;

    // Output results
    cout << "Minimum value: " << min_value << endl;
    cout << "Maximum value: " << max_value << endl;
    cout << "Sum of values: " << sum << endl;
    cout << "Average of values: " << average << endl;

    return 0;
}
